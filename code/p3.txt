var  sunriseT = 7;
var  sunsetT = 19;
var nightT = 20;
var midnight =24
var early = 1;

let x, y;
let c;
let down;
let stars = [];

function setup() {
  createCanvas(600,600);
  background(173,202,230);
  angleMode(DEGREES);
  x = width / 2;
  y = height / 2;
  c = 255;

  for (let i = 0; i < 500; i++) {
    stars[i] = new Star(random(width), random(height), random(10), random(1,3), random(1));
  }
  }

function draw() {
  background(154,203,255);

  let h = hour();
  let mh = map(h, 0, 23, 0, width);

//daytime
  if (h > sunriseT && h < sunsetT){
    noStroke();
    fill(255,255,148);
    ellipse(x,y,300,300);
    cloudsd();
  }

  if (h==sunriseT){
    sunrise();
    sunr();
    mountains();
    cloudssr();
  }

//at 6pm
  if (h == 18) {
    background(46,100,152);
    var color1 = color(46,100,152);
    var color2 = color(164,140,238);
    setGradient(0, 0, windowWidth, windowHeight, color1, color2, "Y");
    noStroke();
    fill(255,255,148,220);
    ellipse(x,y,300,300);
    clouds();
  }

  if (h == sunsetT ) {
    sunsetsky();
    stroke(255,255,224,100);
    fill(255,255,224,40);
    ellipse(x,y,300,300);
    cloudss();
  }


let mh2 = map(h, 0, 30, 0, width);
  if (h >= nightT){
    background(0,0,63);
for (let i = 0; i < stars.length; i++) {
  stars[i].twinkle();
  stars[i].showStar();
}
    stroke(255);
    fill(255,255,224);
    ellipse(x,y,300,300);
    noStroke();
    fill(0,0,63,210);
    ellipse(mh2,x,y,300,300);
    cloudsn();
    diamond();
  }

let mh3 = map(h, 0, 23, 0, width);
  if (h < sunriseT){
    background(0,0,63);

for (let i = 0; i < stars.length; i++) {
  stars[i].twinkle();
  stars[i].showStar();
}

    stroke(255,255,224);
    fill(255,255,224);
    ellipse(x,y,300,300);
    noStroke();
    fill(0,0,63,210);
    ellipse(mh3,x,y,300,300);
    stars2();
    cloudsn();
    diamond();

  }

 console.log(h);
  //let ml = millis();
  // let s = second();
  // push();
  // translate(width/2, height/2);
  // let ms = map(s, 0, 59, 0,360);
  // rotate(ms-90);
  // fill(255);
  // rect(0, 0, 180, 10); // Larger rectangle is rotating in degrees
  // pop();

 //console.log(s);

}

function sunr(){
  push();
   let min = minute();
   let mm = map(min, 0, 119, 0, -height);
   noStroke();
   fill(255,140,0,180);
   ellipse(width/2,mm+600,300,300);
   pop();
}

function diamond(){
 push();
  let min = minute();
  let mm = map(min, 0, 59, 0, width);
  stroke(255);
  fill(255,243,205);
  quad(mm, mm,mm+15,mm+25,mm,mm+50,mm-15,mm+25);
  pop();
}

function stars2(){
  let ss = minute();
  let ssm= map(ss,0,59,0,width);
  for (var i = 0; i < 50; i++) {
}
}

function mountains(){
  noStroke();
  fill(90,104,130);
  quad(300,600,500,300,500,300,700,600);
  fill(128,120,136);
  quad(-50,600,100,400,300,500,400,600);
}
//night
function cloudsn (){
  let xm = second();
  let xmm = map(xm, 0, 59, 0, width);
  noStroke();
  fill(123,110,192);
  ellipse(xmm+80,y,100,70);
  ellipse(xmm+50,y+20,100,70);
  ellipse(xmm+130,y+25,100,70);
  fill(83,76,175);
  ellipse(x+xmm+100,y+50,100,70);
  ellipse(x+xmm+70,y+70,100,70);
  ellipse(x+xmm+150,y+75,100,70);
  fill(123,110,192);
  ellipse(x+xmm+150,y+30,100,70);
  ellipse(x+xmm+120,y+50,100,70);
  ellipse(x+xmm+200,y+55,100,70);
  fill(58,53,98);
  ellipse(xmm+200,y+160,180,90);
  ellipse(xmm+170,y+180,200,80);
  ellipse(xmm+250,y+185,200,90);
  ellipse(xmm+250,y+180,300,60);
}
//daytime clouds
function cloudsd() {
  let xm = second();
  let xmm = map(xm, 0, 59, 0, width);
  noStroke();
  fill(255);
  ellipse(xmm+80,y,100,70);
  ellipse(xmm+50,y+20,100,70);
  ellipse(xmm+130,y+25,100,70);
  fill(134,177,218);
  ellipse(x+xmm+100,y+50,100,70);
  ellipse(x+xmm+70,y+70,100,70);
  ellipse(x+xmm+150,y+75,100,70);
  fill(243,250,255);
  ellipse(x+xmm+150,y+30,100,70);
  ellipse(x+xmm+120,y+50,100,70);
  ellipse(x+xmm+200,y+55,100,70);
  fill(219,249,254);
  ellipse(xmm+200,y+160,180,90);
  ellipse(xmm+170,y+180,200,80);
  ellipse(xmm+250,y+185,200,90);
  ellipse(xmm+250,y+180,300,60);
}
//at 6
function clouds() {
  let xm = second();
  let xmm = map(xm, 0, 59, 0, width);
  noStroke();
  fill(173,202,230);
  ellipse(xmm+80,y,100,70);
  ellipse(xmm+50,y+20,100,70);
  ellipse(xmm+130,y+25,100,70);
  fill(134,177,218);
  ellipse(x+xmm+100,y+50,100,70);
  ellipse(x+xmm+70,y+70,100,70);
  ellipse(x+xmm+150,y+75,100,70);
  fill(173,202,230);
  ellipse(x+xmm+150,y+30,100,70);
  ellipse(x+xmm+120,y+50,100,70);
  ellipse(x+xmm+200,y+55,100,70);
  fill(114,164,212);
  ellipse(xmm+200,y+160,180,90);
  ellipse(xmm+170,y+180,200,80);
  ellipse(xmm+250,y+185,200,90);
  ellipse(xmm+250,y+180,300,60);
}
//sunset
function cloudss() {
  let xm = second();
  let xmm = map(xm, 0, 59, 0, width);
  noStroke();
  fill(64,50,128);
  ellipse(xmm+80,y,100,70);
  ellipse(xmm+50,y+20,100,70);
  ellipse(xmm+130,y+25,100,70);
  fill(80,10,128);
  ellipse(x+xmm+100,y+50,100,70);
  ellipse(x+xmm+70,y+70,100,70);
  ellipse(x+xmm+150,y+75,100,70);
  fill(154,100,176);
  ellipse(x+xmm+150,y+30,100,70);
  ellipse(x+xmm+120,y+50,100,70);
  ellipse(x+xmm+200,y+55,100,70);
  fill(154,100,116);
  ellipse(xmm+200,y+160,180,90);
  ellipse(xmm+170,y+180,200,80);
  ellipse(xmm+250,y+185,200,90);
  ellipse(xmm+250,y+180,300,60);
}

//sunrise
function cloudssr() {
  let xm = second();
  let xmm = map(xm, 0, 59, 0, width);
  noStroke();
  fill(174,140,184);
  ellipse(xmm+80,y,100,70);
  ellipse(xmm+50,y+20,100,70);
  ellipse(xmm+130,y+25,100,70);
  fill(242,153,136);
  ellipse(x+xmm+100,y+50,100,70);
  ellipse(x+xmm+70,y+70,100,70);
  ellipse(x+xmm+150,y+75,100,70);
  fill(154,140,184);
  ellipse(x+xmm+150,y+30,100,70);
  ellipse(x+xmm+120,y+50,100,70);
  ellipse(x+xmm+200,y+55,100,70);
  fill(237,114,90);
  ellipse(xmm+200,y+160,180,90);
  ellipse(xmm+170,y+180,200,80);
  ellipse(xmm+250,y+185,200,90);
  ellipse(xmm+250,y+180,300,60);
}

function sunrise(){
  var color1 = color(164,140,238);
  var color2 = color(249,151,68);
  setGradient(0, 0, windowWidth, windowHeight, color1, color2, "Y");
}

function sunsetsky (){
  createCanvas (600,600);
  var color1 = color(35,0,120);
  var color2 = color(180,91,78);
  setGradient(0, 0, windowWidth, windowHeight, color1, color2, "Y");

}

function setGradient(x, y, w, h, c1, c2, axis) {
  if (axis == "Y") {
    for (let i = y; i <= y+h; i++) {
      var inter = map(i, y, y+h, 0, 1);
      var c = lerpColor(c1, c2, inter);
      stroke(c);
      line(x, i, x+w, i);
    }
  }
  else if (axis == "X") {
    for (let j = x; j <= x+w; j++) {
      var inter2 = map(j, x, x+w, 0, 1);
      var d = lerpColor(c1, c2, inter2);
      stroke(d);
      line(j, y, j, y+h);
    }
  }
}

//original code by rios on p5js
class Star {
  constructor(tx, ty, tc, tf, td) {
    this.x = tx;
    this.y = ty;
    this.c = tc;
    this.f = tf;
    this.down = td;
  }

  showStar() {
    stroke(this.c);
    point(this.x, this.y);
  }

  twinkle() {
    if (this.c >= 255) {
      this.down = true;
    }
    if (this.c <= 0) {
      this.down = false;
    }

    if (this.down) {
      this.c -= this.f
    } else {
      this.c += this.f
    }
  }
}
